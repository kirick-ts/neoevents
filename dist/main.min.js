var e=class extends Event{constructor(e,t){super(e),this.detail=t}},t=class extends EventTarget{listeners=new Set;addListener(e,t,s){this.addEventListener(e,t,s);const n=()=>{this.removeEventListener(e,t,s),this.listeners.delete(n)};return this.listeners.add(n),n}on(e,t){return this.addListener(e,t)}once(e,t){return this.addListener(e,t,{once:!0})}wait(e){return new Promise(t=>{this.once(e,e=>{t(e)})})}emit(t,s){return super.dispatchEvent(new e(t,s))}destroy(){for(const e of this.listeners)e();this.listeners.clear()}};export{e as NeoEvent,t as NeoEventTarget};